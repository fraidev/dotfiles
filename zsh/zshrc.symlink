export ZSH=$DOTFILES/zsh
export MYVIMRC=$HOME/.config/nvim/init.lua

if [[ -d $DOTFILES/zsh/functions ]]; then
    for func in $DOTFILES/zsh/functions/*(:t); autoload -U $func
fi

########################################################
# Configuration
########################################################

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

# prepend_path $HOME/npmbin/node_modules/.bin
prepend_path /usr/local/opt/grep/libexec/gnubin
prepend_path /usr/local/sbin
prepend_path $DOTFILES/bin
prepend_path $DOTFILES/scripts
prepend_path $HOME/bin
prepend_path $HOME/Library/Android/sdk/platform-tools
prepend_path $HOME/Library/Android/sdk/emulator
prepend_path /opt/homebrew/bin
prepend_path $GOPATH/bin
prepend_path /usr/local/bin
prepend_path $HOME/go
prepend_path $HOME/Library/Python/3.8/bin
prepend_path $HOME/.local/bin
# prepend_path $HOME/.rustup/toolchains/nightly-aarch64-apple-darwin/bin
prepend_path $HOME/Developer/flutter/bin
prepend_path $HOME/.dotnet/tools
prepend_path $HOME/.local/share/bob/nvim-bin 
prepend_path /opt/homebrew/opt/curl/bin
prepend_path /usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.0.0/bin
prepend_path /opt/homebrew/opt/llvm/bin
prepend_path $HOME/.cargo/env
prepend_path $HOME/workspace/tezos
prepend_path $HOME/.npm-global/bin
prepend_path $HOME/bin
prepend_path $HOME/.local/bin
prepend_path $HOME/.fvm/bin
prepend_path $HOME/.fluvio/bin
prepend_path /opt/homebrew/opt/openjdk/bin
# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/code ]]; then
    export CODE_DIR=~/code
fi

# display how long all tasks over 10 seconds take
export REPORTTIME=10
export KEYTIMEOUT=1              # 10ms delay for key sequences

setopt NO_BG_NICE
setopt NO_HUP                    # don't kill background jobs when the shell exits
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS
setopt LOCAL_TRAPS
setopt PROMPT_SUBST

# history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt EXTENDED_HISTORY          # write the history file in the ":start:elapsed;command" format.
setopt HIST_REDUCE_BLANKS        # remove superfluous blanks before recording entry.
setopt SHARE_HISTORY             # share history between all sessions.
setopt HIST_IGNORE_ALL_DUPS      # delete old recorded entry if new entry is a duplicate.

setopt COMPLETE_ALIASES


bindkey -e                                          # Disable vi mode

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# default to file completion
zstyle ':completion:*' completer _expand _complete _files _correct _approximate


########################################################
# Plugin setup
########################################################

export ZPLUGDIR="$CACHEDIR/zsh/plugins"
[[ -d "$ZPLUGDIR" ]] || mkdir -p "$ZPLUGDIR"
# array containing plugin information (managed by zfetch)
typeset -A plugins

zfetch mafredri/zsh-async async.plugin.zsh
zfetch zsh-users/zsh-syntax-highlighting
zfetch zsh-users/zsh-autosuggestions
zfetch chriskempson/base16-shell
zfetch Aloxaf/fzf-tab

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

########################################################
# Setup
########################################################

# add a config file for ripgrep
export RIPGREP_CONFIG_PATH="$HOME/.rgrc"
export FZF_DEFAULT_COMMAND='rg --hidden --ignore .git -g ""'
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh

# user env vars
export GO111MODULE="on"
export GOPATH="$HOME/go"
export TEZOS_ALPHANET_DO_NOT_PULL=yes
export ANDROID_HOME=$HOME/Library/Android/sdk
export CLOUDSDK_PYTHON=/opt/homebrew/bin/python3


########################################################
# Aliases
########################################################

# reload zsh config
alias reload!='RELOAD=1 source ~/.zshrc'

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
    colorflag="--color"
else # macOS `ls`
    colorflag="-G"
fi

# use nvim, but don't make me think about it
[[ -n "$(command -v nvim)" ]] && alias vim="nvim"

# Filesystem aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....="cd ../../.."
alias .....="cd ../../../.."


# kubectl
# alias k="kubectl"

# Windows CMD like
alias cd..="cd .."

alias l="ls -lah ${colorflag}"
alias ls="ls ${colorflag}"
alias la="ls -AF ${colorflag}"
alias ll="ls -lFh ${colorflag}"
alias lld="ls -l | grep ^d"
alias rmf="rm -rf"

# Helpers
alias grep='grep --color=auto'
alias df='df -h' # disk free, in Gigabytes, not bytes
alias du='du -h -c' # calculate disk usage for a folder

# Applications
alias ios='open -a /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app'

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Recursively delete `.DS_Store` files
alias cleanup="find . -name '*.DS_Store' -type f -ls -delete"
# remove broken symlinks
alias clsym="find -L . -name . -o -type d -prune -o -type l -exec rm {} +"

# git aliases
alias gs='git s'
alias glog="git l"

# tmux aliases
alias ta='tmux attach'
alias tls='tmux ls'
alias tat='tmux attach -t'
alias tns='tmux new-session -s'

alias lpath='echo $PATH | tr ":" "\n"' # list the PATH separated by new lines

alias nr="npm run"

# infinyon aliases
export FLUVIO_DIR="$HOME/workspace/infinyon/fluvio"
alias flvd="$FLUVIO_DIR/target/debug/fluvio"
# alias fluvio="$FLUVIO_DIR/target/debug/fluvio"
alias flvdr="$FLUVIO_DIR/target/release/fluvio"
alias flvt="$FLUVIO_DIR/target/debug/flv-test"
alias cdk="$FLUVIO_DIR/target/debug/cdk"
alias fcld="$FLUVIO_DIR/../platform-local/infinyon-cloud/target/debug/fluvio-cloud"

source "$DOTFILES/zsh/utils.zsh"
source "$DOTFILES/zsh/prompt.zsh"

#npm
NPM_PACKAGES="${HOME}/.npm-packages"

export PATH="$PATH:$NPM_PACKAGES/bin"
PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"

# If a local zshrc exists, source it
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

#flux completion
command -v flux >/dev/null && . <(flux completion zsh)


# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/tools/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/tools/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '$HOME/tools/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/tools/google-cloud-sdk/completion.zsh.inc'; fi

export GOOGLE_APPLICATION_CREDENTIALS=$HOME/.config/gcloud/application_default_credentials.json
# lazy load kubectl completion
kubectl () {
    command kubectl $*
    if [[ -z $KUBECTL_COMPLETE ]]
    then
        source <(command kubectl completion zsh)
        KUBECTL_COMPLETE=1 
    fi
}

export FLUVIO_BIN="$FLUVIO_DIR/target/debug/fluvio"
# export HOME_PROFILE=$("$FLUVIO_BIN profile")
export HOME_PROFILE=$($FLUVIO_BIN profile)
# export HOME_PROFILE=$(fluvio profile)

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/frai/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
export AWS_PROFILE=infinyon
