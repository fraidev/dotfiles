# tmux display things in 258 colors
set -s set-clipboard on
# set -g default-terminal "tmux-256color"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set -as terminal-features ',xterm-256color-italic:clipboard'


# NEW WAY
set -as terminal-features 'xterm-256color:RGB'

# set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",screen-255color:Tc"



# set -g default-terminal "tmux-256color"

# OLD WAY
# set-option -ga terminal-overrides ",tmux-255color:Tc"

# set -g default-terminal "rio"
# set-option -ga terminal-overrides ",rio:Tc"
# set -g default-terminal "xterm-ghostty"
# set-option -ga terminal-overrides ",xterm-ghostty:Tc"


set -g history-limit 20000

# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
# set -g prefix `
# bind ` send-prefix

# for nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled # cycle through panes
# unbind C-a
# unbind o # this is the default key for cycling panes
# bind ^A select-pane -t:.+

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g focus-events on
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format ""

######################
#### Key Bindings ####
######################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# split window and fix path for tmux 1.9
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# bind -r Tab select-pane -t :.+
# bind -r BTab select-pane -t :.-

bind -r Tab select-window -t :+
bind -r BTab select-window -t :-

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r M-j resize-pane -D
bind -r M-k resize-pane -U
bind -r M-h resize-pane -L
bind -r M-l resize-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-l select-pane -R
bind -n M-k select-pane -U

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

bind C-o rotate-window

# bind e new-session

# enable mouse support for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# Normal visual selection
bind -T copy-mode-vi v send-keys -X begin-selection
# Line-wise selection
bind -T copy-mode-vi V send-keys -X select-line
# Block (rectangular) selection like Vimâ€™s Ctrl-v
bind -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle

if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

source-file "$DOTFILES/tmux/themes/bubbles.conf"

# order windows
bind < swap-window -t -1
bind > swap-window -t +1


bind e command-prompt -p "New Session:" "new-session -A -s '%%'"
# bind k confirm kill-session

